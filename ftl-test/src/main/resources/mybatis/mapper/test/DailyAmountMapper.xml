<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cloud.ftl.ftltest.test.dao.IDailyAmountDao">
    <resultMap id="BaseResultMap" type="com.cloud.ftl.ftltest.test.entity.DailyAmount">
        <id column="da_id" jdbcType="BIGINT" property="daId" />
        <result column="entity_id" jdbcType="INTEGER" property="entityId" />
        <result column="date_time" jdbcType="TIMESTAMP" property="dateTime" />
        <result column="sett_profit" jdbcType="DECIMAL" property="settProfit" />
        <result column="expend_profit" jdbcType="DECIMAL" property="expendProfit" />
        <result column="income_profit" jdbcType="DECIMAL" property="incomeProfit" />
        <result column="profit_hours" jdbcType="TINYINT" property="profitHours" />
        <result column="deficit_hours" jdbcType="TINYINT" property="deficitHours" />
        <result column="minus_deviation" jdbcType="DECIMAL" property="minusDeviation" />
        <result column="positive_deviation" jdbcType="DECIMAL" property="positiveDeviation" />
        <result column="status" jdbcType="TINYINT" property="status" />
        <result column="ce" jdbcType="TINYINT" property="ce" />
        <result column="sa" jdbcType="TINYINT" property="sa" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="status_time" jdbcType="TIMESTAMP" property="statusTime" />
    </resultMap>

    <sql id="Base_Column_List">
        da_id,entity_id,date_time,sett_profit,expend_profit,income_profit,profit_hours,deficit_hours,minus_deviation,positive_deviation,status,ce,sa,create_time,status_time
    </sql>

    <sql id="Base_Object_List">
        #{daId},#{entityId},#{dateTime},#{settProfit},#{expendProfit},#{incomeProfit},#{profitHours},#{deficitHours},#{minusDeviation},#{positiveDeviation},#{status},#{ce},#{sa},#{createTime},#{statusTime}
    </sql>

    <sql id="Base_Item_List">
        #{item.daId},#{item.entityId},#{item.dateTime},#{item.settProfit},#{item.expendProfit},#{item.incomeProfit},#{item.profitHours},#{item.deficitHours},#{item.minusDeviation},#{item.positiveDeviation},#{item.status},#{item.ce},#{item.sa},#{item.createTime},#{item.statusTime}
    </sql>

    <sql id="where_sql">
        <if test="daId != null">
            AND da_id = #{daId}
        </if>
        <if test="entityId != null">
            AND entity_id = #{entityId}
        </if>
        <if test="dateTime != null">
            AND date_time = #{dateTime}
        </if>
        <if test="settProfit != null">
            AND sett_profit = #{settProfit}
        </if>
        <if test="expendProfit != null">
            AND expend_profit = #{expendProfit}
        </if>
        <if test="incomeProfit != null">
            AND income_profit = #{incomeProfit}
        </if>
        <if test="profitHours != null">
            AND profit_hours = #{profitHours}
        </if>
        <if test="deficitHours != null">
            AND deficit_hours = #{deficitHours}
        </if>
        <if test="minusDeviation != null">
            AND minus_deviation = #{minusDeviation}
        </if>
        <if test="positiveDeviation != null">
            AND positive_deviation = #{positiveDeviation}
        </if>
        <if test="status != null">
            AND status = #{status}
        </if>
        <if test="ce != null">
            AND ce = #{ce}
        </if>
        <if test="sa != null">
            AND sa = #{sa}
        </if>
        <if test="createTime != null">
            AND create_time = #{createTime}
        </if>
        <if test="statusTime != null">
            AND status_time = #{statusTime}
        </if>
        <if test="criterias != null">
            <foreach collection="criterias" item="criteria" separator=" ">
                <if test="criteria.valid">
                    ${criteria.opt}
                    <choose>
                        <when test="criteria.criterions.size() > 1">
                            <trim prefix="(" prefixOverrides="and|or" suffix=")">
                                <foreach collection="criteria.criterions" item="criterion">
                                    <choose>
                                        <when test="criterion.noValue">
                                            ${criterion.condition}
                                        </when>
                                        <when test="criterion.oneValue">
                                            ${criterion.condition} #{criterion.value1}
                                        </when>
                                        <when test="criterion.secondValue">
                                            ${criterion.condition} #{criterion.value1} and #{criterion.value2}
                                        </when>
                                        <when test="criterion.listValue">
                                            ${criterion.condition}
                                            <foreach collection="criterion.list" item="listItem" open="(" close=")" separator=",">
                                                #{listItem}
                                            </foreach>
                                        </when>
                                    </choose>
                                </foreach>
                            </trim>
                        </when>
                        <otherwise>
                            <trim prefixOverrides="and|or">
                                <foreach collection="criteria.criterions" item="criterion">
                                    <choose>
                                        <when test="criterion.noValue">
                                            ${criterion.condition}
                                        </when>
                                        <when test="criterion.oneValue">
                                            ${criterion.condition} #{criterion.value1}
                                        </when>
                                        <when test="criterion.secondValue">
                                            ${criterion.condition} #{criterion.value1} and #{criterion.value2}
                                        </when>
                                        <when test="criterion.listValue">
                                            ${criterion.condition}
                                            <foreach collection="criterion.list" item="listItem" open="(" close=")" separator=",">
                                                #{listItem}
                                            </foreach>
                                        </when>
                                    </choose>
                                </foreach>
                            </trim>
                        </otherwise>
                    </choose>
                </if>
            </foreach>
        </if>
    </sql>

    <!--获取最大的主键-->
    <select id="selectMaxId" resultType="java.lang.Long">
        select IFNULL(max(da_id), 0) from `daily_amount`
    </select>

    <!--根据主键获取对象-->
    <select id="selectById" resultMap="BaseResultMap">
        select <include refid="Base_Column_List" /> from daily_amount
        <where>
            AND da_id = #{daId}
        </where>
    </select>

    <!--查询列表-->
    <select id="selectList" resultMap="BaseResultMap">
        select <include refid="Base_Column_List" /> from daily_amount
        <where>
            <include refid="where_sql" />
        </where>
        <if test="orderByClause!=null and orderByClause!=''">
            order by ${orderByClause}
        </if>
        <if test="page != null and pageSize != null and page > 0" >
            limit #{index},#{pageSize}
        </if>
    </select>

    <!--查询列表总数-->
    <select id="selectCount" resultType="java.lang.Long">
        select count(1) from daily_amount
        <where>
            <include refid="where_sql" />
        </where>
    </select>

    <!--插入对象-->
    <insert id="addDailyAmount">
        insert into daily_amount(<include refid="Base_Column_List" />)
        values(<include refid="Base_Object_List" />)
    </insert>

    <!--批量插入对象-->
    <insert id="batchAddDailyAmount">
        insert into daily_amount(<include refid="Base_Column_List" />)
        values
        <foreach collection="list" index="index" item="item" separator=",">
            (<include refid="Base_Item_List" />)
        </foreach>
    </insert>

    <!--更新对象-->
    <update id="updateNotNull">
        update daily_amount
        <set>
            <if test="daId != null">
                da_id = #{daId},
            </if>
            <if test="entityId != null">
                entity_id = #{entityId},
            </if>
            <if test="dateTime != null">
                date_time = #{dateTime},
            </if>
            <if test="settProfit != null">
                sett_profit = #{settProfit},
            </if>
            <if test="expendProfit != null">
                expend_profit = #{expendProfit},
            </if>
            <if test="incomeProfit != null">
                income_profit = #{incomeProfit},
            </if>
            <if test="profitHours != null">
                profit_hours = #{profitHours},
            </if>
            <if test="deficitHours != null">
                deficit_hours = #{deficitHours},
            </if>
            <if test="minusDeviation != null">
                minus_deviation = #{minusDeviation},
            </if>
            <if test="positiveDeviation != null">
                positive_deviation = #{positiveDeviation},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="ce != null">
                ce = #{ce},
            </if>
            <if test="sa != null">
                sa = #{sa},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="statusTime != null">
                status_time = #{statusTime}
            </if>
        </set>
        <where>
            AND da_id = #{daId}
        </where>
    </update>

    <!--批量更新对象-->
    <update id="batchUpdateDailyAmount">
        <foreach collection="list" separator=";" item="item">
            update daily_amount
            <set>
                <if test="item.daId != null">
                    da_id = #{item.daId},
                </if>
                <if test="item.entityId != null">
                    entity_id = #{item.entityId},
                </if>
                <if test="item.dateTime != null">
                    date_time = #{item.dateTime},
                </if>
                <if test="item.settProfit != null">
                    sett_profit = #{item.settProfit},
                </if>
                <if test="item.expendProfit != null">
                    expend_profit = #{item.expendProfit},
                </if>
                <if test="item.incomeProfit != null">
                    income_profit = #{item.incomeProfit},
                </if>
                <if test="item.profitHours != null">
                    profit_hours = #{item.profitHours},
                </if>
                <if test="item.deficitHours != null">
                    deficit_hours = #{item.deficitHours},
                </if>
                <if test="item.minusDeviation != null">
                    minus_deviation = #{item.minusDeviation},
                </if>
                <if test="item.positiveDeviation != null">
                    positive_deviation = #{item.positiveDeviation},
                </if>
                <if test="item.status != null">
                    status = #{item.status},
                </if>
                <if test="item.ce != null">
                    ce = #{item.ce},
                </if>
                <if test="item.sa != null">
                    sa = #{item.sa},
                </if>
                <if test="item.createTime != null">
                    create_time = #{item.createTime},
                </if>
                <if test="item.statusTime != null">
                    status_time = #{item.statusTime}
                </if>
            </set>
            <where>
                AND da_id = #{item.daId}
            </where>
        </foreach>
    </update>

    <!--更新对象(全更新)-->
    <update id="fullUpdateDailyAmount">
        update daily_amount
        <set>
            da_id = #{daId},
            entity_id = #{entityId},
            date_time = #{dateTime},
            sett_profit = #{settProfit},
            expend_profit = #{expendProfit},
            income_profit = #{incomeProfit},
            profit_hours = #{profitHours},
            deficit_hours = #{deficitHours},
            minus_deviation = #{minusDeviation},
            positive_deviation = #{positiveDeviation},
            status = #{status},
            ce = #{ce},
            sa = #{sa},
            create_time = #{createTime},
            status_time = #{statusTime}
        </set>
        <where>
            AND da_id = #{daId}
        </where>
    </update>

    <!--批量更新对象(全更新)-->
    <update id="batchFullUpdateDailyAmount">
        <foreach collection="list" separator=";" item="item">
            update daily_amount
            <set>
                da_id = #{item.daId},
                entity_id = #{item.entityId},
                date_time = #{item.dateTime},
                sett_profit = #{item.settProfit},
                expend_profit = #{item.expendProfit},
                income_profit = #{item.incomeProfit},
                profit_hours = #{item.profitHours},
                deficit_hours = #{item.deficitHours},
                minus_deviation = #{item.minusDeviation},
                positive_deviation = #{item.positiveDeviation},
                status = #{item.status},
                ce = #{item.ce},
                sa = #{item.sa},
                create_time = #{item.createTime},
                status_time = #{item.statusTime}
            </set>
            <where>
                AND da_id = #{item.daId}
            </where>
        </foreach>
    </update>

    <!--根据主键删除对象-->
    <delete id="deleteDailyAmount">
        delete from daily_amount
        <where>
            AND da_id = #{daId}
        </where>
    </delete>

    <!-- 批量删除对象 -->
    <delete id="batchDeleteDailyAmount">
        delete from daily_amount
        <where>
            da_id in
            <foreach collection="list" open="(" close=")" separator="," item="item">
                #{item}
            </foreach>
        </where>
    </delete>

    <!--根据ID列表获取记录列表-->
    <select id="selectBatchIds" resultMap="BaseResultMap">
        select <include refid="Base_Column_List" /> from daily_amount
        <where>
            da_id in
            <foreach collection="list" open="(" close=")" separator="," item="item">
                #{item}
            </foreach>
        </where>
    </select>

    <!--~~~~~~~~~~~~~~~~~~~~~~ custom code begin ~~~~~~~~~~~~~~~~~~~~~~-->
    
    <!--~~~~~~~~~~~~~~~~~~~~~~ custom code end ~~~~~~~~~~~~~~~~~~~~~~-->

</mapper>